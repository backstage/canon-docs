"use strict";(self.webpackChunk_backstage_canon=self.webpackChunk_backstage_canon||[]).push([[78],{"./src/components/Text/Text.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllVariants:()=>AllVariants,AllWeights:()=>AllWeights,Default:()=>Default,Responsive:()=>Responsive,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Text_stories});var react=__webpack_require__("../../node_modules/react/index.js"),canon=__webpack_require__("./src/contexts/canon.tsx");const Text=(0,react.forwardRef)(((props,ref)=>{const{children,variant="body",weight="regular",...restProps}=props,{getResponsiveValue}=(0,canon.T)(),responsiveVariant=getResponsiveValue(variant),responsiveWeight=getResponsiveValue(weight);return react.createElement("p",{ref,...restProps,className:`text ${responsiveVariant?`text-${responsiveVariant}`:""} ${responsiveWeight?`text-${responsiveWeight}`:""}`},children)}));Text.displayName="Text",Text.__docgenInfo={description:"",methods:[],displayName:"Text",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},variant:{required:!1,tsType:{name:"union",raw:"| 'subtitle'\n| 'body'\n| 'caption'\n| 'label'\n| Partial<Record<Breakpoint, 'subtitle' | 'body' | 'caption' | 'label'>>",elements:[{name:"literal",value:"'subtitle'"},{name:"literal",value:"'body'"},{name:"literal",value:"'caption'"},{name:"literal",value:"'label'"},{name:"Partial",elements:[{name:"Record",elements:[{name:"union",raw:"'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'",elements:[{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"},{name:"literal",value:"'2xl'"}]},{name:"union",raw:"'subtitle' | 'body' | 'caption' | 'label'",elements:[{name:"literal",value:"'subtitle'"},{name:"literal",value:"'body'"},{name:"literal",value:"'caption'"},{name:"literal",value:"'label'"}]}],raw:"Record<Breakpoint, 'subtitle' | 'body' | 'caption' | 'label'>"}],raw:"Partial<Record<Breakpoint, 'subtitle' | 'body' | 'caption' | 'label'>>"}]},description:""},weight:{required:!1,tsType:{name:"union",raw:"'regular' | 'bold' | Partial<Record<Breakpoint, 'regular' | 'bold'>>",elements:[{name:"literal",value:"'regular'"},{name:"literal",value:"'bold'"},{name:"Partial",elements:[{name:"Record",elements:[{name:"union",raw:"'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'",elements:[{name:"literal",value:"'xs'"},{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'xl'"},{name:"literal",value:"'2xl'"}]},{name:"union",raw:"'regular' | 'bold'",elements:[{name:"literal",value:"'regular'"},{name:"literal",value:"'bold'"}]}],raw:"Record<Breakpoint, 'regular' | 'bold'>"}],raw:"Partial<Record<Breakpoint, 'regular' | 'bold'>>"}]},description:""}}};var Stack=__webpack_require__("./src/components/Stack/Stack.tsx");const Text_stories={title:"Components/Text",component:Text},Default={args:{children:"Lorem ipsum dolor sit amet consectetur. Nec arcu vel lacus magna adipiscing nisi mauris tortor viverra. Enim rhoncus quisque consectetur ligula diam ac lacus massa. Id interdum id pellentesque justo ut massa nibh amet. Odio massa in scelerisque tortor massa integer purus amet enim. Eros sit neque nullam facilisis. Purus massa dignissim aliquet purus eu in. Urna consequat ullamcorper arcu amet dictumst. Commodo praesent turpis fringilla tristique congue volutpat in. Nulla in nulla ultrices lacus. In ultrices id tellus ut."}},AllVariants={args:{children:"Text"},render:()=>react.createElement(Stack.B,{gap:"md"},react.createElement(Text,{variant:"subtitle"},"Subtitle ",Default.args?.children),react.createElement(Text,{variant:"body"},"Body ",Default.args?.children),react.createElement(Text,{variant:"caption"},"Caption ",Default.args?.children),react.createElement(Text,{variant:"label"},"Label ",Default.args?.children))},AllWeights={args:{children:"Text"},render:()=>react.createElement(Stack.B,{gap:"md"},react.createElement(Text,{weight:"regular"},"Regular ",Default.args?.children),react.createElement(Text,{weight:"bold"},"Bold ",Default.args?.children))},Responsive={args:{...Default.args,variant:{xs:"label",md:"body"}}},__namedExportsOrder=["Default","AllVariants","AllWeights","Responsive"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    children: 'Lorem ipsum dolor sit amet consectetur. Nec arcu vel lacus magna adipiscing nisi mauris tortor viverra. Enim rhoncus quisque consectetur ligula diam ac lacus massa. Id interdum id pellentesque justo ut massa nibh amet. Odio massa in scelerisque tortor massa integer purus amet enim. Eros sit neque nullam facilisis. Purus massa dignissim aliquet purus eu in. Urna consequat ullamcorper arcu amet dictumst. Commodo praesent turpis fringilla tristique congue volutpat in. Nulla in nulla ultrices lacus. In ultrices id tellus ut.'\n  }\n}",...Default.parameters?.docs?.source}}},AllVariants.parameters={...AllVariants.parameters,docs:{...AllVariants.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: \'Text\'\n  },\n  render: () => <Stack gap="md">\n      <Text variant="subtitle">Subtitle {Default.args?.children}</Text>\n      <Text variant="body">Body {Default.args?.children}</Text>\n      <Text variant="caption">Caption {Default.args?.children}</Text>\n      <Text variant="label">Label {Default.args?.children}</Text>\n    </Stack>\n}',...AllVariants.parameters?.docs?.source}}},AllWeights.parameters={...AllWeights.parameters,docs:{...AllWeights.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: \'Text\'\n  },\n  render: () => <Stack gap="md">\n      <Text weight="regular">Regular {Default.args?.children}</Text>\n      <Text weight="bold">Bold {Default.args?.children}</Text>\n    </Stack>\n}',...AllWeights.parameters?.docs?.source}}},Responsive.parameters={...Responsive.parameters,docs:{...Responsive.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Default.args,\n    variant: {\n      xs: 'label',\n      md: 'body'\n    }\n  }\n}",...Responsive.parameters?.docs?.source}}}}}]);