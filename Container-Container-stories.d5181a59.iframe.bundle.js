"use strict";(self.webpackChunk_backstage_canon=self.webpackChunk_backstage_canon||[]).push([[590],{"./src/components/Container/Container.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Container_stories});var react=__webpack_require__("../../node_modules/react/index.js"),Box=__webpack_require__("./src/components/Box/Box.tsx"),getClassNames=__webpack_require__("./src/utils/getClassNames.ts");const Container=(0,react.forwardRef)(((props,ref)=>{const{children,className,style,...restProps}=props,classNames=["canon-container",(0,getClassNames.Z)(restProps),className].filter(Boolean).join(" ");return react.createElement("div",{ref,className:classNames,style},children)}));Container.__docgenInfo={description:"@public",methods:[],displayName:"Container",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},className:{required:!1,tsType:{name:"string"},description:""},marginY:{required:!1,tsType:{name:"SpaceProps['marginY']",raw:"SpaceProps['marginY']"},description:""},marginBottom:{required:!1,tsType:{name:"SpaceProps['marginBottom']",raw:"SpaceProps['marginBottom']"},description:""},marginTop:{required:!1,tsType:{name:"SpaceProps['marginTop']",raw:"SpaceProps['marginTop']"},description:""},paddingY:{required:!1,tsType:{name:"SpaceProps['paddingY']",raw:"SpaceProps['paddingY']"},description:""},paddingBottom:{required:!1,tsType:{name:"SpaceProps['paddingBottom']",raw:"SpaceProps['paddingBottom']"},description:""},paddingTop:{required:!1,tsType:{name:"SpaceProps['paddingTop']",raw:"SpaceProps['paddingTop']"},description:""},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:""}}};const Container_stories={title:"Components/Container",component:Container,argTypes:{children:{control:!1},className:{control:"text"}},parameters:{layout:"fullscreen"}},FakeBox=()=>react.createElement(Box.a,{borderRadius:"xs",style:{background:"#1f47ff",color:"white",height:"400px"}}),Default={args:{},render:args=>react.createElement(Container,args,react.createElement(FakeBox,null))},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => <Container {...args}>\n      <FakeBox />\n    </Container>\n}",...Default.parameters?.docs?.source}}}},"./src/utils/getClassNames.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>getClassNames});const spaceMap=type=>({none:`${type}-none`,"2xs":`${type}-2xs`,xs:`${type}-xs`,sm:`${type}-sm`,md:`${type}-md`,lg:`${type}-lg`,xl:`${type}-xl`,"2xl":`${type}-2xl`}),valueMap={alignItems:{stretch:"items-stretch",start:"items-start",center:"items-center",end:"items-end"},border:{none:"border-none",base:"border-base",error:"border-error",warning:"border-warning",selected:"border-selected"},borderRadius:{none:"rounded-none","2xs":"rounded-2xs",xs:"rounded-xs",sm:"rounded-sm",md:"rounded-md",lg:"rounded-lg",xl:"rounded-xl","2xl":"rounded-2xl"},colEnd:{1:"col-end-1",2:"col-end-2",3:"col-end-3",4:"col-end-4",5:"col-end-5",6:"col-end-6",7:"col-end-7",8:"col-end-8",9:"col-end-9",10:"col-end-10",11:"col-end-11",12:"col-end-12",auto:"col-end-auto"},colSpan:{1:"col-span-1",2:"col-span-2",3:"col-span-3",4:"col-span-4",5:"col-span-5",6:"col-span-6",7:"col-span-7",8:"col-span-8",9:"col-span-9",10:"col-span-10",11:"col-span-11",12:"col-span-12",auto:"col-span-auto"},colStart:{1:"col-start-1",2:"col-start-2",3:"col-start-3",4:"col-start-4",5:"col-start-5",6:"col-start-6",7:"col-start-7",8:"col-start-8",9:"col-start-9",10:"col-start-10",11:"col-start-11",12:"col-start-12",auto:"col-start-auto"},columns:{1:"grid-cols-1",2:"grid-cols-2",3:"grid-cols-3",4:"grid-cols-4",5:"grid-cols-5",6:"grid-cols-6",7:"grid-cols-7",8:"grid-cols-8",9:"grid-cols-9",10:"grid-cols-10",11:"grid-cols-11",12:"grid-cols-12",auto:"grid-cols-auto"},display:{none:"hidden",flex:"flex",block:"block",inline:"inline"},flexDirection:{row:"flex-row",column:"flex-col"},flexWrap:{wrap:"flex-wrap",nowrap:"flex-nowrap","wrap-reverse":"flex-wrap-reverse"},gap:spaceMap("gap"),justifyContent:{stretch:"justify-stretch",start:"justify-start",center:"justify-center",end:"justify-end",around:"justify-around",between:"justify-between"},margin:spaceMap("m"),marginBottom:spaceMap("mb"),marginLeft:spaceMap("ml"),marginRight:spaceMap("mr"),marginTop:spaceMap("mt"),marginX:spaceMap("mx"),marginY:spaceMap("my"),padding:spaceMap("p"),paddingBottom:spaceMap("pb"),paddingLeft:spaceMap("pl"),paddingRight:spaceMap("pr"),paddingTop:spaceMap("pt"),paddingX:spaceMap("px"),paddingY:spaceMap("py"),rowSpan:{1:"row-span-1",2:"row-span-2",3:"row-span-3",4:"row-span-4",5:"row-span-5",6:"row-span-6",7:"row-span-7",8:"row-span-8",9:"row-span-9",10:"row-span-10",11:"row-span-11",12:"row-span-12",full:"row-span-full"}},getClassNames=props=>{const classNames=[];return Object.entries(props).forEach((([propName,propValue])=>{classNames.push(...((propName,propValue)=>{const classNames=[];if(!valueMap.hasOwnProperty(propName))return classNames;if("string"==typeof propValue||"number"==typeof propValue){const value=valueMap[propName]?.[propValue]||propValue;classNames.push(`cu-${value}`)}else"object"==typeof propValue&&Object.entries(propValue).forEach((([breakpoint,value])=>{const mappedValue=valueMap[propName]?.[value]||value;"xs"===breakpoint?classNames.push(`cu-${mappedValue}`):classNames.push(`cu-${breakpoint}-${mappedValue}`)}));return classNames})(propName,propValue))})),classNames.filter(Boolean).join(" ")}}}]);