"use strict";(self.webpackChunk_backstage_canon=self.webpackChunk_backstage_canon||[]).push([[204],{"../../node_modules/@base_ui/react/Checkbox/Indicator/CheckboxIndicator.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>CheckboxIndicator});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_Root_CheckboxRootContext__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@base_ui/react/Checkbox/Root/CheckboxRootContext.js"),_utils_useComponentRenderer__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@base_ui/react/utils/useComponentRenderer.js"),_utils_useCustomStyleHookMapping__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@base_ui/react/Checkbox/utils/useCustomStyleHookMapping.js");const CheckboxIndicator=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function CheckboxIndicator(props,forwardedRef){const{render,className,keepMounted=!0,...otherProps}=props,ownerState=(0,_Root_CheckboxRootContext__WEBPACK_IMPORTED_MODULE_1__.W)(),customStyleHookMapping=(0,_utils_useCustomStyleHookMapping__WEBPACK_IMPORTED_MODULE_2__.P)(ownerState),{renderElement}=(0,_utils_useComponentRenderer__WEBPACK_IMPORTED_MODULE_3__._)({render:render??"span",ref:forwardedRef,ownerState,className,customStyleHookMapping,extraProps:otherProps});return keepMounted||ownerState.checked||ownerState.indeterminate?renderElement():null}))},"../../node_modules/@base_ui/react/Checkbox/Root/CheckboxRoot.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{y:()=>CheckboxRoot});var react=__webpack_require__("../../node_modules/react/index.js"),react_namespaceObject=__webpack_require__.t(react,2);const CheckboxGroupRootContext=react.createContext(null);const DEFAULT_VALIDITY_STATE={badInput:!1,customError:!1,patternMismatch:!1,rangeOverflow:!1,rangeUnderflow:!1,stepMismatch:!1,tooLong:!1,tooShort:!1,typeMismatch:!1,valid:null,valueMissing:!1},NOOP=()=>{},FieldRootContext=react.createContext({invalid:void 0,controlId:void 0,setControlId:NOOP,labelId:void 0,setLabelId:NOOP,messageIds:[],setMessageIds:NOOP,name:void 0,validityData:{state:DEFAULT_VALIDITY_STATE,errors:[],error:"",value:"",initialValue:null},setValidityData:NOOP,disabled:void 0,touched:!1,setTouched:NOOP,dirty:!1,setDirty:NOOP,validate:()=>null,validateOnChange:!1,validateDebounceTime:0,ownerState:{disabled:!1,valid:null,touched:!1,dirty:!1},markedDirtyRef:{current:!1}});function useFieldRootContext(optional=!0){const context=react.useContext(FieldRootContext);if(context.setControlId===NOOP&&!optional)throw new Error("Base UI: Field components must be placed within <Field.Root>.");return context}var useComponentRenderer=__webpack_require__("../../node_modules/@base_ui/react/utils/useComponentRenderer.js"),useCustomStyleHookMapping=__webpack_require__("../../node_modules/@base_ui/react/Checkbox/utils/useCustomStyleHookMapping.js");const visuallyHidden_visuallyHidden={border:0,clip:"rect(0 0 0 0)",height:"1px",margin:"-1px",overflow:"hidden",padding:0,position:"absolute",whiteSpace:"nowrap",width:"1px"};var useForkRef=__webpack_require__("../../node_modules/@base_ui/react/node_modules/@mui/utils/esm/useForkRef/useForkRef.js"),mergeReactProps=__webpack_require__("../../node_modules/@base_ui/react/utils/mergeReactProps.js");let globalId=0;const maybeReactUseId={...react_namespaceObject}.useId;function useId(idOverride){if(void 0!==maybeReactUseId){const reactId=maybeReactUseId();return idOverride??reactId}return function useGlobalId(idOverride){const[defaultId,setDefaultId]=react.useState(idOverride),id=idOverride||defaultId;return react.useEffect((()=>{null==defaultId&&(globalId+=1,setDefaultId(`mui-${globalId}`))}),[defaultId]),id}(idOverride)}const useEnhancedEffect_useEnhancedEffect="undefined"!=typeof window?react.useLayoutEffect:react.useEffect;const useEventCallback_useEventCallback=function useEventCallback(fn){const ref=react.useRef(fn);return useEnhancedEffect_useEnhancedEffect((()=>{ref.current=fn})),react.useRef(((...args)=>(0,ref.current)(...args))).current},FormRootContext=react.createContext({formRef:{current:{fields:new Map}},errors:{},onClearErrors:()=>{}});function useFormRootContext(){return react.useContext(FormRootContext)}function getCombinedFieldValidityData(validityData,invalid){return{...validityData,state:{...validityData.state,valid:!invalid&&validityData.state.valid}}}const validityKeys=Object.keys(DEFAULT_VALIDITY_STATE);var react_dom=__webpack_require__("../../node_modules/react-dom/index.js");function useField(params){const{formRef}=useFormRootContext(),{invalid,markedDirtyRef,validityData,setValidityData}=useFieldRootContext(),{value,id,controlRef,commitValidation}=params,getValueRef=function useLatestRef(value){const ref=react.useRef(value);return useEnhancedEffect_useEnhancedEffect((()=>{ref.current=value})),ref}(params.getValue);useEnhancedEffect_useEnhancedEffect((()=>{let initialValue=value;void 0===initialValue&&(initialValue=getValueRef.current?.()),null===validityData.initialValue&&initialValue!==validityData.initialValue&&setValidityData((prev=>({...prev,initialValue})))}),[setValidityData,value,validityData.initialValue,getValueRef]),useEnhancedEffect_useEnhancedEffect((()=>{id&&formRef.current.fields.set(id,{controlRef,validityData:getCombinedFieldValidityData(validityData,invalid),validate(){let nextValue=value;void 0===nextValue&&(nextValue=getValueRef.current?.()),markedDirtyRef.current=!0,react_dom.flushSync((()=>commitValidation(nextValue)))}})}),[commitValidation,controlRef,formRef,getValueRef,id,invalid,markedDirtyRef,validityData,value])}var reactVersion=__webpack_require__("../../node_modules/@base_ui/react/utils/reactVersion.js");function getInertValue(value){if(value)return!!(0,reactVersion._)(19)||"true"}function useCheckboxRoot(params){const{id:idProp,checked:externalChecked,inputRef:externalInputRef,onCheckedChange:onCheckedChangeProp=(()=>{}),name,defaultChecked=!1,readOnly=!1,required=!1,autoFocus=!1,indeterminate=!1,disabled=!1}=params,[checked,setCheckedState]=function useControlled({controlled,default:defaultProp,name,state="value"}){const{current:isControlled}=react.useRef(void 0!==controlled),[valueState,setValue]=react.useState(defaultProp);return[isControlled?controlled:valueState,react.useCallback((newValue=>{isControlled||setValue(newValue)}),[])]}({controlled:externalChecked,default:defaultChecked,name:"Checkbox",state:"checked"}),{labelId,setControlId,setTouched,setDirty,validityData}=useFieldRootContext(),buttonRef=react.useRef(null),{getValidationProps,getInputValidationProps,inputRef:inputValidationRef,commitValidation}=function useFieldControlValidation(){const{setValidityData,validate,messageIds,validityData,validateOnChange,validateDebounceTime,invalid,markedDirtyRef,controlId,ownerState}=useFieldRootContext(),{formRef}=useFormRootContext(),timeoutRef=react.useRef(-1),inputRef=react.useRef(null);react.useEffect((()=>()=>{window.clearTimeout(timeoutRef.current)}),[]);const commitValidation=useEventCallback_useEventCallback((async value=>{const element=inputRef.current;if(!element)return;window.clearTimeout(timeoutRef.current);const resultOrPromise=validate(value);let result=null;result="object"==typeof resultOrPromise&&null!==resultOrPromise&&"then"in resultOrPromise?await resultOrPromise:resultOrPromise;let errorMessage="";null!==result&&(errorMessage=Array.isArray(result)?result.join("\n"):result),element.setCustomValidity(errorMessage);const nextState=function getState(el){return validityKeys.reduce(((acc,key)=>(acc[key]=el.validity[key],el.validity.customError||markedDirtyRef.current||(acc[key]="valid"===key),acc)),{})}(element);let validationErrors=[];Array.isArray(result)?validationErrors=result:result?validationErrors=[result]:element.validationMessage&&(validationErrors=[element.validationMessage]);const nextValidityData={value,state:nextState,error:Array.isArray(result)?result[0]:result??element.validationMessage,errors:validationErrors,initialValue:validityData.initialValue};if(controlId){const currentFieldData=formRef.current.fields.get(controlId);currentFieldData&&formRef.current.fields.set(controlId,{...currentFieldData,...getCombinedFieldValidityData(nextValidityData,invalid)})}setValidityData(nextValidityData)})),getValidationProps=react.useCallback(((externalProps={})=>(0,mergeReactProps.a)(externalProps,{...messageIds.length&&{"aria-describedby":messageIds.join(" ")},...!1===ownerState.valid&&{"aria-invalid":!0}})),[messageIds,ownerState.valid]),getInputValidationProps=react.useCallback(((externalProps={})=>(0,mergeReactProps.a)(getValidationProps(externalProps),{onChange(event){if(event.nativeEvent.defaultPrevented)return;if(invalid||!validateOnChange)return;const element=event.currentTarget;""!==element.value?(window.clearTimeout(timeoutRef.current),validateDebounceTime?timeoutRef.current=window.setTimeout((()=>{commitValidation(element.value)}),validateDebounceTime):commitValidation(element.value)):commitValidation(element.value)}})),[getValidationProps,invalid,validateOnChange,validateDebounceTime,commitValidation]);return react.useMemo((()=>({getValidationProps,getInputValidationProps,inputRef,commitValidation})),[getValidationProps,getInputValidationProps,commitValidation])}(),onCheckedChange=useEventCallback_useEventCallback(onCheckedChangeProp),id=useId(idProp);useEnhancedEffect_useEnhancedEffect((()=>(setControlId(id),()=>{setControlId(void 0)})),[id,setControlId]),useField({id,commitValidation,value:checked,controlRef:buttonRef});const inputRef=react.useRef(null),mergedInputRef=(0,useForkRef.A)(externalInputRef,inputRef,inputValidationRef);react.useEffect((()=>{inputRef.current&&(inputRef.current.indeterminate=indeterminate)}),[indeterminate]);const getButtonProps=react.useCallback(((externalProps={})=>(0,mergeReactProps.a)(getValidationProps(externalProps),{ref:buttonRef,value:"off",type:"button",role:"checkbox","aria-checked":indeterminate?"mixed":checked,"aria-disabled":disabled||void 0,"aria-readonly":readOnly||void 0,"aria-labelledby":labelId,onBlur(){const element=inputRef.current;element&&(setTouched(!0),commitValidation(element.checked))},onClick(event){event.defaultPrevented||readOnly||(event.preventDefault(),inputRef.current?.click())}})),[getValidationProps,indeterminate,checked,disabled,readOnly,labelId,setTouched,commitValidation]),getInputProps=react.useCallback(((externalProps={})=>(0,mergeReactProps.a)(getInputValidationProps(externalProps),{id,checked,disabled,name,required,autoFocus,ref:mergedInputRef,style:visuallyHidden_visuallyHidden,tabIndex:-1,type:"checkbox","aria-hidden":!0,inert:getInertValue(!0),onChange(event){if(event.nativeEvent.defaultPrevented)return;const nextChecked=event.target.checked;setDirty(nextChecked!==validityData.initialValue),setCheckedState(nextChecked),onCheckedChange?.(nextChecked,event.nativeEvent)}})),[getInputValidationProps,id,checked,disabled,name,required,autoFocus,mergedInputRef,setDirty,validityData.initialValue,setCheckedState,onCheckedChange]);return react.useMemo((()=>({checked,getButtonProps,getInputProps})),[checked,getButtonProps,getInputProps])}var CheckboxRootContext=__webpack_require__("../../node_modules/@base_ui/react/Checkbox/Root/CheckboxRootContext.js"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const CheckboxRoot=react.forwardRef((function CheckboxRoot(props,forwardedRef){const{name,onCheckedChange,defaultChecked,parent=!1,readOnly=!1,indeterminate=!1,required=!1,disabled:disabledProp=!1,checked:checkedProp,render,className,inputRef,...otherProps}=props,groupContext=function useCheckboxGroupRootContext(optional=!0){const context=react.useContext(CheckboxGroupRootContext);if(null===context&&!optional)throw new Error("Base UI: CheckboxGroupRootContext is not defined.");return context}(),isGrouped=groupContext?.parent&&groupContext.allValues;let groupProps={};isGrouped&&(parent?groupProps=groupContext.parent.getParentProps():name&&(groupProps=groupContext.parent.getChildProps(name)));const{checked:groupChecked=checkedProp,indeterminate:groupIndeterminate=indeterminate,onCheckedChange:groupOnChange=onCheckedChange,...otherGroupProps}=groupProps,{checked,getInputProps,getButtonProps}=useCheckboxRoot({...props,inputRef,checked:groupChecked,indeterminate:groupIndeterminate,onCheckedChange:groupOnChange}),computedChecked=isGrouped?Boolean(groupChecked):checked,computedIndeterminate=isGrouped?groupIndeterminate:indeterminate,{ownerState:fieldOwnerState,disabled:fieldDisabled}=useFieldRootContext(),disabled=fieldDisabled||disabledProp,ownerState=react.useMemo((()=>({...fieldOwnerState,checked:computedChecked,disabled,readOnly,required,indeterminate:computedIndeterminate})),[fieldOwnerState,computedChecked,disabled,readOnly,required,computedIndeterminate]),customStyleHookMapping=(0,useCustomStyleHookMapping.P)(ownerState),{renderElement}=(0,useComponentRenderer._)({propGetter:getButtonProps,render:render??"button",ref:forwardedRef,ownerState,className,customStyleHookMapping,extraProps:{...otherProps,...otherGroupProps}});return(0,jsx_runtime.jsxs)(CheckboxRootContext.p.Provider,{value:ownerState,children:[renderElement(),!checked&&props.name&&(0,jsx_runtime.jsx)("input",{type:"hidden",name:props.name,value:"off"}),(0,jsx_runtime.jsx)("input",{...getInputProps()})]})}))},"../../node_modules/@base_ui/react/Checkbox/Root/CheckboxRootContext.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{W:()=>useCheckboxRootContext,p:()=>CheckboxRootContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const CheckboxRootContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);function useCheckboxRootContext(){const context=react__WEBPACK_IMPORTED_MODULE_0__.useContext(CheckboxRootContext);if(null===context)throw new Error("Base UI: Checkbox.Indicator must be placed inside the Checkbox.Root component.");return context}},"../../node_modules/@base_ui/react/Checkbox/utils/useCustomStyleHookMapping.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>useCustomStyleHookMapping});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");function useCustomStyleHookMapping(ownerState){return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>({indeterminate:()=>null,checked(value){let state=value?"checked":"unchecked";return ownerState.indeterminate&&(state="mixed"),{"data-state":state}}})),[ownerState.indeterminate])}},"../../node_modules/@base_ui/react/node_modules/@mui/utils/esm/useForkRef/useForkRef.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useForkRef});var react=__webpack_require__("../../node_modules/react/index.js");function useForkRef(...refs){return react.useMemo((()=>refs.every((ref=>null==ref))?null:instance=>{refs.forEach((ref=>{!function setRef(ref,value){"function"==typeof ref?ref(value):ref&&(ref.current=value)}(ref,instance)}))}),refs)}},"../../node_modules/@base_ui/react/utils/mergeReactProps.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function mergeReactProps(externalProps,...internalProps){let mergedInternalProps=internalProps[0];for(let i=1;i<internalProps.length;i+=1)mergedInternalProps=merge(mergedInternalProps,internalProps[i]);return merge(externalProps,mergedInternalProps)}function merge(externalProps,internalProps){return externalProps?Object.entries(externalProps).reduce(((acc,[key,value])=>("o"===key[0]&&"n"===key[1]&&key.charCodeAt(2)>=65&&key.charCodeAt(2)<=90&&"function"==typeof value?acc[key]=event=>{let isPrevented=!1;const theirHandler=value,ourHandler=internalProps[key],baseUIEvent=event;baseUIEvent.preventBaseUIHandler=()=>{isPrevented=!0};const result=theirHandler(baseUIEvent);return isPrevented||ourHandler?.(baseUIEvent),result}:"style"===key?(value||internalProps.style)&&(acc[key]={...internalProps.style,...value||{}}):acc[key]=value,acc)),{...internalProps}):internalProps}__webpack_require__.d(__webpack_exports__,{a:()=>mergeReactProps})},"../../node_modules/@base_ui/react/utils/reactVersion.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>isReactVersionAtLeast});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const majorVersion=parseInt(react__WEBPACK_IMPORTED_MODULE_0__.version.split(".")[0],10);function isReactVersionAtLeast(reactVersionToCheck){return majorVersion>=reactVersionToCheck}},"../../node_modules/@base_ui/react/utils/useComponentRenderer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_:()=>useComponentRenderer});var react=__webpack_require__("../../node_modules/react/index.js");var mergeReactProps=__webpack_require__("../../node_modules/@base_ui/react/utils/mergeReactProps.js");var useForkRef=__webpack_require__("../../node_modules/@base_ui/react/node_modules/@mui/utils/esm/useForkRef/useForkRef.js"),reactVersion=__webpack_require__("../../node_modules/@base_ui/react/utils/reactVersion.js");function useRenderPropForkRef(render,...refs){let childRef;return childRef="function"!=typeof render?(0,reactVersion._)(19)?render.props.ref:render.ref:null,(0,useForkRef.A)(childRef,...refs)}var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const defaultRenderFunctions={button:props=>(0,jsx_runtime.jsx)("button",{type:"button",...props}),div:props=>(0,jsx_runtime.jsx)("div",{...props}),h2:props=>(0,jsx_runtime.jsx)("h2",{...props}),output:props=>(0,jsx_runtime.jsx)("output",{...props}),p:props=>(0,jsx_runtime.jsx)("p",{...props}),span:props=>(0,jsx_runtime.jsx)("span",{...props}),a:props=>(0,jsx_runtime.jsx)("a",{...props}),label:props=>(0,jsx_runtime.jsx)("label",{...props}),input:props=>(0,jsx_runtime.jsx)("input",{...props}),fieldset:props=>(0,jsx_runtime.jsx)("fieldset",{...props}),form:props=>(0,jsx_runtime.jsx)("form",{...props})};function useComponentRenderer(settings){const{render:renderProp,className:classNameProp,ownerState,ref,propGetter=props=>props,extraProps,customStyleHookMapping}=settings,className=function resolveClassName(className,ownerState){return"function"==typeof className?className(ownerState):className}(classNameProp,ownerState),ownProps={...react.useMemo((()=>function getStyleHookProps(state,customMapping){let props={};return Object.entries(state).forEach((([key,value])=>{if(customMapping?.hasOwnProperty(key)){const customProps=customMapping[key](value);null!=customProps&&(props={...props,...customProps})}else value&&(props[`data-${key.toLowerCase()}`]=value.toString())})),props}(ownerState,customStyleHookMapping)),[ownerState,customStyleHookMapping]),...extraProps};let resolvedRenderProp;className&&(ownProps.className=className),resolvedRenderProp="string"==typeof renderProp?defaultRenderFunctions[renderProp]:renderProp;const renderedElementProps=propGetter(ownProps),propsWithRef={...renderedElementProps,ref:useRenderPropForkRef(resolvedRenderProp,ref,renderedElementProps.ref)};return{renderElement:()=>function evaluateRenderProp(render,props,ownerState){return"function"==typeof render?render(props,ownerState):react.cloneElement(render,{...(0,mergeReactProps.a)(render.props,props),ref:props.ref})}(resolvedRenderProp,propsWithRef,ownerState)}}}}]);