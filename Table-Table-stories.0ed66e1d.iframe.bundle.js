"use strict";(self.webpackChunk_backstage_canon=self.webpackChunk_backstage_canon||[]).push([[398],{"./src/components/Table/Table.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Table_stories});var react=__webpack_require__("../../node_modules/react/index.js");const Table=react.forwardRef((({className,...props},ref)=>react.createElement("div",{className:"table"},react.createElement("table",{ref,className,...props}))));Table.displayName="Table";const TableHeader=react.forwardRef((({className,...props},ref)=>react.createElement("thead",{ref,className:["table-header",className].join(" "),...props})));TableHeader.displayName="TableHeader";const TableBody=react.forwardRef((({className,...props},ref)=>react.createElement("tbody",{ref,className:["table-body",className].join(" "),...props})));TableBody.displayName="TableBody";const TableFooter=react.forwardRef((({className,...props},ref)=>react.createElement("tfoot",{ref,className:["table-footer",className].join(" "),...props})));TableFooter.displayName="TableFooter";const TableRow=react.forwardRef((({className,...props},ref)=>react.createElement("tr",{ref,className:["table-row",className].join(" "),...props},props.children)));TableRow.displayName="TableRow";const TableHead=react.forwardRef((({className,...props},ref)=>react.createElement("th",{ref,className:["table-head",className].join(" "),...props})));TableHead.displayName="TableHead";const TableCell=react.forwardRef((({className,...props},ref)=>react.createElement("td",{ref,className:["table-cell",className].join(" "),...props})));TableCell.displayName="TableCell";const TableCaption=react.forwardRef((({className,...props},ref)=>react.createElement("caption",{ref,className:["table-caption",className].join(" "),...props})));TableCaption.displayName="TableCaption",Table.__docgenInfo={description:"@public",methods:[],displayName:"Table"},TableHeader.__docgenInfo={description:"@public",methods:[],displayName:"TableHeader"},TableBody.__docgenInfo={description:"@public",methods:[],displayName:"TableBody"},TableFooter.__docgenInfo={description:"@public",methods:[],displayName:"TableFooter"},TableHead.__docgenInfo={description:"@public",methods:[],displayName:"TableHead"},TableRow.__docgenInfo={description:"@public",methods:[],displayName:"TableRow"},TableCell.__docgenInfo={description:"@public",methods:[],displayName:"TableCell"},TableCaption.__docgenInfo={description:"@public",methods:[],displayName:"TableCaption"};const invoices=[{invoice:"INV001",paymentStatus:"Paid",totalAmount:"$250.00",paymentMethod:"Credit Card"},{invoice:"INV002",paymentStatus:"Pending",totalAmount:"$150.00",paymentMethod:"PayPal"},{invoice:"INV003",paymentStatus:"Unpaid",totalAmount:"$350.00",paymentMethod:"Bank Transfer"},{invoice:"INV004",paymentStatus:"Paid",totalAmount:"$450.00",paymentMethod:"Credit Card"},{invoice:"INV005",paymentStatus:"Paid",totalAmount:"$550.00",paymentMethod:"PayPal"},{invoice:"INV006",paymentStatus:"Pending",totalAmount:"$200.00",paymentMethod:"Bank Transfer"},{invoice:"INV007",paymentStatus:"Unpaid",totalAmount:"$300.00",paymentMethod:"Credit Card"}],Table_stories={title:"Components/Table",component:Table,subcomponents:{TableBody,TableCell,TableFooter,TableHead,TableHeader,TableRow}},Default={render:()=>react.createElement(Table,null,react.createElement(TableHeader,null,react.createElement(TableRow,null,react.createElement(TableHead,{className:"w-[100px]"},"Invoice"),react.createElement(TableHead,null,"Status"),react.createElement(TableHead,null,"Method"),react.createElement(TableHead,{className:"text-right"},"Amount"))),react.createElement(TableBody,null,invoices.map((invoice=>react.createElement(TableRow,{key:invoice.invoice},react.createElement(TableCell,{className:"font-medium"},invoice.invoice),react.createElement(TableCell,null,invoice.paymentStatus),react.createElement(TableCell,null,invoice.paymentMethod),react.createElement(TableCell,{className:"text-right"},invoice.totalAmount))))),react.createElement(TableFooter,null,react.createElement(TableRow,null,react.createElement(TableCell,{colSpan:3},"Total"),react.createElement(TableCell,{className:"text-right"},"$2,500.00"))))},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: () => <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead className="w-[100px]">Invoice</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead>Method</TableHead>\n          <TableHead className="text-right">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {invoices.map(invoice => <TableRow key={invoice.invoice}>\n            <TableCell className="font-medium">{invoice.invoice}</TableCell>\n            <TableCell>{invoice.paymentStatus}</TableCell>\n            <TableCell>{invoice.paymentMethod}</TableCell>\n            <TableCell className="text-right">{invoice.totalAmount}</TableCell>\n          </TableRow>)}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TableCell colSpan={3}>Total</TableCell>\n          <TableCell className="text-right">$2,500.00</TableCell>\n        </TableRow>\n      </TableFooter>\n    </Table>\n}',...Default.parameters?.docs?.source}}}}}]);